# datasource
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.url=jdbc:h2:mem:proposta
spring.datasource.username=sa
spring.datasource.password=

# jpa
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.jpa.hibernate.ddl-auto=update
#spring.jpa.properties.hibernate.show_sql=true
#spring.jpa.properties.hibernate.format_sql=true

# h2
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console

#Feign
feign.client.config.verificaRestricao.read-timeout=100
feign.client.config.verificaRestricao.connect-timeout=100

#actuator / prometheus
management.endpoints.web.exposure.include=info,health,prometheus
management.endpoints.prometheus.enabled=true
management.endpoint.health.show-details=always

#Adicionando metricas
management.metrics.tags.aplicacao=${NOME_DA_APLICACAO:servico de proposta}
management.metrics.tags.ambiente=${AMBIENTE:desenvolvimento}
#management.endpoint.health.roles=admin

#schedule consulta cartao
periodicidade.consulta-cartao=${PERIODICIDADE_CONSULTA_CARTAO:3000}

#Link para servico externo de analise de credito
analise.financeira=${LINK_ANALISE_FINANCEIRA:http://localhost:9999/api/solicitacao}

#Link para servico externo de cartoes
analise.cartao=${LINK_ANALISE_CARTAO:http://localhost:8888/api/cartoes}

#Habilitando log para o Spring Security
logging.level.org.springframework.security=DEBUG
logging.level.org.keycloak = DEBUG

#keycloak Configuration
keycloak.auth-server-url=${LINK_KEYCLOAK:http://localhost:18080/auth}
keycloak.realm=proposta
keycloak.resource=proposta-app
keycloak.public-client=true
keycloak.bearer-only=true
#keycloak.security-constraints[0].authRoles[0]=admin
#keycloak.security-constraints[0].securityCollections[0].patterns[0]=/propostas/*

# Jaeger - Habilita ou nao
opentracing.jaeger.enabled=${JAEGER_ENABLED:true}

# Jaeger - Nome do servico
opentracing.jaeger.service-name=servico-de-proposta

# Jaeger - Endereco para enviar os metadados (trace, span, etc)
opentracing.jaeger.http-sender.url=${JAEGER_ENDPOINT:http://localhost:14268/api/traces}

# Jaeger - Amostragem rate limit (10 traces por segundo)
opentracing.jaeger.rate-limiting-sampler.max-traces-per-second=${JAEGER_SAMPLER:10}

# When using spring-cloud-starter-openfeign in the spring boot 2.4.x, jaeger has a problem
# Configuration required for Jaeger to work.
opentracing.spring.cloud.feign.enabled=false